import{_ as s,c as a,o as n,b as o}from"./app.40687699.js";const i=JSON.parse('{"title":"Response","description":"","frontmatter":{},"headers":[{"level":2,"title":"Assert HTTP Status Code and Headers","slug":"assert-http-status-code-and-headers","link":"#assert-http-status-code-and-headers","children":[]},{"level":2,"title":"Assert Response Body","slug":"assert-response-body","link":"#assert-response-body","children":[]},{"level":2,"title":"Copy Response","slug":"copy-response","link":"#copy-response","children":[]}],"relativePath":"rest/response.md","lastUpdated":1671919659000}'),p={name:"rest/response.md"},e=o(`<h1 id="response" tabindex="-1">Response <a class="header-anchor" href="#response" aria-hidden="true">#</a></h1><p>Obviously you will want to access the response in your tests. FlueFlame allows you to check response parameters such as headers or status code and deserialize the response body for further work with it.</p><h2 id="assert-http-status-code-and-headers" tabindex="-1">Assert HTTP Status Code and Headers <a class="header-anchor" href="#assert-http-status-code-and-headers" aria-hidden="true">#</a></h2><p>The <code>Response</code> property is used to access the response. <code>Response</code> contains methods for checking the status code and headers.</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">Test</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GetReturnsOk</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    HttpHost</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Get</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Url</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/api/employee/all</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Send</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Response</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AssertStatusCode</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">HttpStatusCode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">OK</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AssertHeader</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyCustomHeaderKey</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyCustomHeaderValue</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="assert-response-body" tabindex="-1">Assert Response Body <a class="header-anchor" href="#assert-response-body" aria-hidden="true">#</a></h2><p>To check the body, use the <code>AsJson</code>, <code>AsXml</code> or <code>AsText</code> properties. They indicate how to serialize the response in the next methods.</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">Test</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GetWithQueryReturnsOk</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    HttpHost</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Get</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Url</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/api/employee/older-than</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddQuery</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">olderThan</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">45</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Send</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Response</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AssertStatusCode</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">HttpStatusCode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">OK</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">AsJson</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AssertThat</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Employee</span><span style="color:#89DDFF;">[]&gt;(</span><span style="color:#FFCB6B;">employees</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> employees</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Should</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">NotContain</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">x</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> x</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Age </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">45</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>The <code>AssertThat</code> method specifies the type into which the response is to be serialized and the method to be called on the serialized object. FlueFlame comes with the <a href="https://fluentassertions.com/" target="_blank" rel="noreferrer">FluentAssertions</a> library as it fits the concept nicely, but you can use any library for entity validation.</p><h2 id="copy-response" tabindex="-1">Copy Response <a class="header-anchor" href="#copy-response" aria-hidden="true">#</a></h2><p>You can also copy the deserialized object for further work with it using the <code>CopyResponseTo()</code> method.</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">Test</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GetWithQueryReturnsOk</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    HttpHost</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Get</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Url</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/api/employee/older-than</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddQuery</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">olderThan</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">45</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Send</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Response</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AssertStatusCode</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">HttpStatusCode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">OK</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">AsJson</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CopyResponseTo</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">out</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Employee</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">employees</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">age</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> employees</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">First</span><span style="color:#89DDFF;">().</span><span style="color:#A6ACCD;">Age</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">//... your code</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,12),l=[e];function t(r,c,F,D,y,A){return n(),a("div",null,l)}const d=s(p,[["render",t]]);export{i as __pageData,d as default};
