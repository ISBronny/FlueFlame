import{_ as s,c as a,o as n,b as l}from"./app.40687699.js";const C=JSON.parse('{"title":"Authorization","description":"","frontmatter":{},"headers":[{"level":2,"title":"Set Bearer token once","slug":"set-bearer-token-once","link":"#set-bearer-token-once","children":[]},{"level":2,"title":"Set Bearer token globaly","slug":"set-bearer-token-globaly","link":"#set-bearer-token-globaly","children":[]}],"relativePath":"rest/auth.md","lastUpdated":1671919659000}'),o={name:"rest/auth.md"},e=l(`<h1 id="authorization" tabindex="-1">Authorization <a class="header-anchor" href="#authorization" aria-hidden="true">#</a></h1><p>Most likely, your application uses authentication and you do not want to disable it for integration tests. FlueFlame provides several methods to solve this problem.</p><h2 id="set-bearer-token-once" tabindex="-1">Set Bearer token once <a class="header-anchor" href="#set-bearer-token-once" aria-hidden="true">#</a></h2><p>You can set the authentication header before sending the request. The <code>WithJwtToken</code> method will set the <code>Authorization</code> header with your token.</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">Test</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">AuthWithJwtReturnsOk</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    HttpHost</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Get</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Url</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/api/admin/test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WithJwtToken</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">YourToken</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Send</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Response</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AssertStatusCode</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">HttpStatusCode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">OK</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="set-bearer-token-globaly" tabindex="-1">Set Bearer token globaly <a class="header-anchor" href="#set-bearer-token-globaly" aria-hidden="true">#</a></h2><p>Setting an auth token on a per-request basis can be cumbersome, so you can add a default header for IFlueFlameHttpHost in your TestBase class:</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TestBase</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">protected</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IFlueFlameHttpHost</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HttpHost</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">get</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">TestBase</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">//...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        HttpHost </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> builder</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">BuildHttpHost</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">b</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">			</span><span style="color:#676E95;">//Configure HttpClient only for FlueFlameHttpHost</span></span>
<span class="line"><span style="color:#A6ACCD;">			b</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ConfigureHttpClient</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">client</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">				client</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DefaultRequestHeaders</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Add</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Authorization</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$&quot;</span><span style="color:#C3E88D;">Bearer </span><span style="color:#89DDFF;">{</span><span style="color:#82AAFF;">GetJwtToken</span><span style="color:#89DDFF;">()}&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,8),p=[e];function t(r,c,D,F,y,i){return n(),a("div",null,p)}const d=s(o,[["render",t]]);export{C as __pageData,d as default};
