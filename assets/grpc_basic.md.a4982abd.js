import{_ as s,c as a,o as n,a as l}from"./app.8c7f4fe7.js";const i=JSON.parse('{"title":"Testing gRPC","description":"","frontmatter":{},"headers":[{"level":2,"title":"Unary RPC","slug":"unary-rpc","link":"#unary-rpc","children":[]},{"level":2,"title":"Server streaming RPC","slug":"server-streaming-rpc","link":"#server-streaming-rpc","children":[]},{"level":2,"title":"Client streaming RPC","slug":"client-streaming-rpc","link":"#client-streaming-rpc","children":[]},{"level":2,"title":"Bidirectional streaming RPC","slug":"bidirectional-streaming-rpc","link":"#bidirectional-streaming-rpc","children":[]}],"relativePath":"grpc/basic.md","lastUpdated":1669503932000}'),p={name:"grpc/basic.md"},o=l(`<h1 id="testing-grpc" tabindex="-1">Testing gRPC <a class="header-anchor" href="#testing-grpc" aria-hidden="true">#</a></h1><p>Our application has a .proto file with math functions:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">syntax = &quot;proto3&quot;;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">option csharp_namespace = &quot;MathGrpcService&quot;;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">package great_math;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">service GreatMath {</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    rpc GetSquare(Number) returns (Number);</span></span>
<span class="line"><span style="color:#A6ACCD;">    rpc GetSum(stream Number) returns (Number);</span></span>
<span class="line"><span style="color:#A6ACCD;">    rpc GetPrimesLessThen(Number) returns (stream Number);</span></span>
<span class="line"><span style="color:#A6ACCD;">    rpc GetMultiplication(stream Number) returns (stream Number);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">message Number {</span></span>
<span class="line"><span style="color:#A6ACCD;">    int32 value = 1;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>And GreatMathService implementing these functions:</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">GreatMathService</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">GreatMath</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">GreatMathBase</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>To create a <code>Number</code> we will use a static method:</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">NumberFactory</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Number</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">FromInteger</span><span style="color:#89DDFF;">(int</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">value</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Number</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">Value </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> value</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><code>GrpcModule</code> is used for testing. The <code>CreateConnection</code> method establishes a connection to the server. For it, you need to specify the class of the automatically generated client.</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">Test</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">SimpleGrpcTest</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	Application</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">gRPC</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CreateConnection</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">GreatMath</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">GreatMathClient</span><span style="color:#89DDFF;">&gt;()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="unary-rpc" tabindex="-1">Unary RPC <a class="header-anchor" href="#unary-rpc" aria-hidden="true">#</a></h2><p>The first GetSquare method returns the square of a number. Let&#39;s implement it:</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">GreatMathService</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">GreatMath</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">GreatMathBase</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">override</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Task</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Number</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GetSquare</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Number</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">request</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ServerCallContext</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">context</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> Task</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">FromResult</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Number</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">Value </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> request</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Value </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> request</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Value</span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>Check that square <code>5</code> is <code>25</code>:</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">Test</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">SimpleGrpcTest</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	Application</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">gRPC</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CreateConnection</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">GreatMath</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">GreatMathClient</span><span style="color:#89DDFF;">&gt;()</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Call</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#FFCB6B;">client</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GetSquare</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">NumberFactory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">FromInteger</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">)),</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#FFCB6B;">response</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> response</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Value</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Should</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Be</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">25</span><span style="color:#89DDFF;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>The <code>Call</code> method takes 2 actions: the first one will be called to send the request, and the second one will be called to check the response.</p><h2 id="server-streaming-rpc" tabindex="-1">Server streaming RPC <a class="header-anchor" href="#server-streaming-rpc" aria-hidden="true">#</a></h2><p>Let&#39;s add a <code>GetPrimesLessThen</code> method to our <code>GreatMathService</code> that returns primes less than the given one:</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">override</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Task</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GetPrimesLessThen</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Number</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">request</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IServerStreamWriter</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Number</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">responseStream</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ServerCallContext</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">context</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">primes</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GetPrimes</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">request</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Value</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">foreach</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">prime</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> primes</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> responseStream</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WriteAsync</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Number</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">Value </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> prime</span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>Let&#39;s test it like this:</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">Test</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ServerSideStreamingTest</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	Application</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">gRPC</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CreateConnection</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">GreatMath</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">GreatMathClient</span><span style="color:#89DDFF;">&gt;()</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Call</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#FFCB6B;">client</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GetPrimesLessThen</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">NumberFactory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">FromInteger</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">25</span><span style="color:#89DDFF;">)),</span></span>
<span class="line"><span style="color:#A6ACCD;">			ResponseHandler</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Task</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ResponseHandler</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">AsyncServerStreamingCall</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Number</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">streamingCall</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">values</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> streamingCall</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ResponseStream</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ReadAllAsync</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">ToListAsync</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">	values</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Select</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">x</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> x</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Value</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Should</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">BeEquivalentTo</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">List</span><span style="color:#89DDFF;">&lt;int&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">11</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">13</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">17</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">19</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">23</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>For testing, we created a <code>ResponseHandler</code> method that receives values from <code>AsyncServerStreamingCall&lt;Number&gt;</code></p><h2 id="client-streaming-rpc" tabindex="-1">Client streaming RPC <a class="header-anchor" href="#client-streaming-rpc" aria-hidden="true">#</a></h2><p>Let&#39;s add the <code>GetSum</code> method to our <code>GreatMathService</code>, which returns the sum of numbers from the stream:</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">override</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Task</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Number</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GetSum</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">IAsyncStreamReader</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Number</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">requestStream</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ServerCallContext</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">context</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">sum</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">foreach</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> requestStream</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ReadAllAsync</span><span style="color:#89DDFF;">())</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		sum </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> number</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Value</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Number</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">Value </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> sum</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>Let&#39;s test it like this:</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">Test</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ClientSideStreamingTest</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	Application</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">gRPC</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CreateConnection</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">GreatMath</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">GreatMathClient</span><span style="color:#89DDFF;">&gt;()</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Call</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">x</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GetSum</span><span style="color:#89DDFF;">(),</span></span>
<span class="line"><span style="color:#A6ACCD;">			SendNumbers</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#FFCB6B;">response</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> response</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Value</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Should</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Be</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">30</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Task</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">SendNumbers</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">AsyncClientStreamingCall</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Number</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Number</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">streamingCall</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> streamingCall</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">RequestStream</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WriteAsync</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">NumberFactory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">FromInteger</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> streamingCall</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">RequestStream</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WriteAsync</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">NumberFactory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">FromInteger</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> streamingCall</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">RequestStream</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WriteAsync</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">NumberFactory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">FromInteger</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> streamingCall</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">RequestStream</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WriteAsync</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">NumberFactory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">FromInteger</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">13</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> streamingCall</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">RequestStream</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CompleteAsync</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>For testing, the <code>SendNumbers</code> method has been created, which imitates the client&#39;s value stream.</p><h2 id="bidirectional-streaming-rpc" tabindex="-1">Bidirectional streaming RPC <a class="header-anchor" href="#bidirectional-streaming-rpc" aria-hidden="true">#</a></h2><p>Let&#39;s add a <code>GetMultiplication</code> method to our <code>GreatMathService</code> that returns the product of numbers each time a new one comes in:</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">override</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Task</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GetMultiplication</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">IAsyncStreamReader</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Number</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">requestStream</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IServerStreamWriter</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Number</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">responseStream</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;">ServerCallContext</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">context</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">prod</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">foreach</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">num</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> requestStream</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ReadAllAsync</span><span style="color:#89DDFF;">())</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		prod </span><span style="color:#89DDFF;">*=</span><span style="color:#A6ACCD;"> num</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Value</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> responseStream</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WriteAsync</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Number</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">Value </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> prod</span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div><p>Let&#39;s test it like this:</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">Test</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">BidirectionalStreamingTest</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	Application</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">gRPC</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CreateConnection</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">GreatMath</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">GreatMathClient</span><span style="color:#89DDFF;">&gt;()</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Call</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">x</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GetMultiplication</span><span style="color:#89DDFF;">(),</span><span style="color:#A6ACCD;"> HandleGetMultiplication</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Task</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">HandleGetMultiplication</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">AsyncDuplexStreamingCall</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Number</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Number</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">call</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> call</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">RequestStream</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WriteAsync</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">NumberFactory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">FromInteger</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> call</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">RequestStream</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WriteAsync</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">NumberFactory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">FromInteger</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> call</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ResponseStream</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">MoveNext</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">	call</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ResponseStream</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Current</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Value</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Should</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Be</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> call</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ResponseStream</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">MoveNext</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">	call</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ResponseStream</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Current</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Value</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Should</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Be</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">50</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> call</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">RequestStream</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WriteAsync</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">NumberFactory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">FromInteger</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> call</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ResponseStream</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">MoveNext</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">	call</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ResponseStream</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Current</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Value</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Should</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Be</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">150</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>For testing, the <code>HandleGetMultiplication</code> method has been created, which implements sending, receiving values and checking them.</p>`,33),e=[o];function t(c,r,F,D,y,C){return n(),a("div",null,e)}const u=s(p,[["render",t]]);export{i as __pageData,u as default};
