import{_ as s,c as a,o as n,b as l}from"./app.c64e97e0.js";const A=JSON.parse('{"title":"Quick start","description":"","frontmatter":{},"headers":[{"level":2,"title":"TestBase","slug":"testbase","link":"#testbase","children":[]},{"level":2,"title":"WebApplicationFactory","slug":"webapplicationfactory","link":"#webapplicationfactory","children":[]},{"level":2,"title":"TestApplicationBuilder","slug":"testapplicationbuilder","link":"#testapplicationbuilder","children":[]},{"level":2,"title":"Simple Test","slug":"simple-test","link":"#simple-test","children":[]}],"relativePath":"overview/quick-start.md","lastUpdated":1658382103000}'),p={name:"overview/quick-start.md"},e=l(`<h1 id="quick-start" tabindex="-1">Quick start <a class="header-anchor" href="#quick-start" aria-hidden="true">#</a></h1><h2 id="testbase" tabindex="-1">TestBase <a class="header-anchor" href="#testbase" aria-hidden="true">#</a></h2><p>Create a NUnit or xUnit project. FlueFlame supports both frameworks. In this example, NUnit will be used.</p><p>Create base test class:</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">abstract</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TestBase</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">protected</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">readonly</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">FlueFlameHost</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Application</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">TestBase</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">webApp</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">WebApplicationFactory</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Program</span><span style="color:#89DDFF;">&gt;()</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WithWebHostBuilder</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">builder</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#A6ACCD;">        Application </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> TestApplicationBuilder</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CreateDefaultBuilder</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">webApp</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">UseNewtonsoftJson</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Build</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="webapplicationfactory" tabindex="-1">WebApplicationFactory <a class="header-anchor" href="#webapplicationfactory" aria-hidden="true">#</a></h2><p>Create the WebApplicationFactory needed to create the <code>FlueFlameHost</code>.</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">webApp</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">WebApplicationFactory</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Program</span><span style="color:#89DDFF;">&gt;()</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WithWebHostBuilder</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">builder</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">});</span></span>
<span class="line"></span></code></pre></div><p>In the <code>WithWebHostBuilder</code> method, you can add or remove the used services. Read more in <a href="/FlueFlame/overview/builder">Builder</a>.</p><blockquote><p>Since .NET 6, the <code>Program</code> class has been deprecated. It can be declared by adding the following code in the end of <code>Program.cs</code> file:</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#F78C6C;">namespace</span><span style="color:#A6ACCD;"> Testing</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">TestData</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">AspNetCore</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">partial</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Program</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></blockquote><h2 id="testapplicationbuilder" tabindex="-1">TestApplicationBuilder <a class="header-anchor" href="#testapplicationbuilder" aria-hidden="true">#</a></h2><p>Create <code>FlueFlameHost</code> using <code>TestApplicationBuilder</code>. If you want your models to be serialized and deserialized using Newtonsoft.Json, call the <code>UseNewtonsoftJson()</code> method. The default will be <code>System.Text.Json</code>.</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">Application </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> TestApplicationBuilder</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CreateDefaultBuilder</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">webApp</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">UseNewtonsoftJson</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Build</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span></code></pre></div><h2 id="simple-test" tabindex="-1">Simple Test <a class="header-anchor" href="#simple-test" aria-hidden="true">#</a></h2><p>\u0421reate a simple test that sends a <code>GET</code> request to <code>/api/employee/all</code> and checks that the response returned is <code>200 OK</code></p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">SimpleTests</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TestBase</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">Test</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GetReturnsOk</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        Application</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Http</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Get</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Url</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/api/employee/all</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Send</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Response</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AssertStatusCode</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">HttpStatusCode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">OK</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,16),o=[e];function t(c,r,i,F,y,D){return n(),a("div",null,o)}const d=s(p,[["render",t]]);export{A as __pageData,d as default};
