import{_ as s,c as n,o as a,b as l}from"./app.40687699.js";const A=JSON.parse('{"title":"Configure IFlueFlameGrpcHost","description":"","frontmatter":{},"headers":[{"level":2,"title":"HttpClient Configuration","slug":"httpclient-configuration","link":"#httpclient-configuration","children":[]},{"level":2,"title":"Custom HttpClient","slug":"custom-httpclient","link":"#custom-httpclient","children":[]},{"level":2,"title":"Custom GrpcChannelOptions","slug":"custom-grpcchanneloptions","link":"#custom-grpcchanneloptions","children":[]}],"relativePath":"grpc/configuration.md","lastUpdated":1673151930000}'),o={name:"grpc/configuration.md"},p=l(`<h1 id="configure-iflueflamegrpchost" tabindex="-1">Configure IFlueFlameGrpcHost <a class="header-anchor" href="#configure-iflueflamegrpchost" aria-hidden="true">#</a></h1><p>The configuration of <code>IFlueFlameGrpcHost</code> is similar to <code>IFlueFlameHttpHost</code>. <a href="/FlueFlame/rest/configuration">More</a></p><h2 id="httpclient-configuration" tabindex="-1">HttpClient Configuration <a class="header-anchor" href="#httpclient-configuration" aria-hidden="true">#</a></h2><p>With the <code>ConfigureHttpClient</code> method, you have full access to <code>HttpClient</code> and can configure it however you like.</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"></span>
<span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">webApp</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">WebApplicationFactory</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Program</span><span style="color:#89DDFF;">&gt;();</span></span>
<span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">builder</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> FlueFlameAspNetBuilder</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CreateDefaultBuilder</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">webApp</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">GrpcHost </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> builder</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">BuildGrpcHost</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">b</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	b</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ConfigureHttpClient</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">client</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        client</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DefaultRequestHeaders</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Add</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Authorization</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$&quot;</span><span style="color:#C3E88D;">Bearer </span><span style="color:#89DDFF;">{</span><span style="color:#82AAFF;">GetJwtToken</span><span style="color:#89DDFF;">()}&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span>
<span class="line"></span></code></pre></div><h2 id="custom-httpclient" tabindex="-1">Custom HttpClient <a class="header-anchor" href="#custom-httpclient" aria-hidden="true">#</a></h2><p>If you have your own <code>HttpClient</code> you can force <code>FlueFlame</code> to use it:</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">GrpcHost </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> builder</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">BuildGrpcHost</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">b</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	b</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">UseCustomHttpClient</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HttpClient</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		Timeout </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> TimeSpan</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">FromMilliseconds</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span>
<span class="line"></span></code></pre></div><h2 id="custom-grpcchanneloptions" tabindex="-1">Custom GrpcChannelOptions <a class="header-anchor" href="#custom-grpcchanneloptions" aria-hidden="true">#</a></h2><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">GrpcHost </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> builder</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">BuildGrpcHost</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">b</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	b</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">UseCustomGrpcChannelOptions</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">GrpcChannelOptions</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		MaxRetryAttempts </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        LoggerFactory </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">NullLoggerFactory</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span>
<span class="line"></span></code></pre></div>`,10),e=[p];function t(c,r,F,i,D,y){return a(),n("div",null,e)}const u=s(o,[["render",t]]);export{A as __pageData,u as default};
