import{_ as s,c as a,o as n,b as l}from"./app.40687699.js";const A=JSON.parse('{"title":"Bidirectional streaming RPC","description":"","frontmatter":{},"headers":[{"level":2,"title":"Call Bidirectional streaming RPC","slug":"call-bidirectional-streaming-rpc","link":"#call-bidirectional-streaming-rpc","children":[]}],"relativePath":"grpc/bidirectional.md","lastUpdated":1673148208000}'),p={name:"grpc/bidirectional.md"},e=l(`<h1 id="bidirectional-streaming-rpc" tabindex="-1">Bidirectional streaming RPC <a class="header-anchor" href="#bidirectional-streaming-rpc" aria-hidden="true">#</a></h1><p>We have a protobuf file with Server streaming RPC <code>GetByIds</code> defined. It takes a stream ID and returns a stream of the corresponding employees:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">syntax = &quot;proto3&quot;;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">import &quot;google/protobuf/wrappers.proto&quot;;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">package Examples.Grpc;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">service EmployeeService {</span></span>
<span class="line"><span style="color:#A6ACCD;">  rpc GetByIds(stream google.protobuf.StringValue) returns (stream Employee);</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">message Employee {</span></span>
<span class="line"><span style="color:#A6ACCD;">  string guid = 1;</span></span>
<span class="line"><span style="color:#A6ACCD;">  string full_name = 2;</span></span>
<span class="line"><span style="color:#A6ACCD;">  string position = 3;</span></span>
<span class="line"><span style="color:#A6ACCD;">  int32 age = 4;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="call-bidirectional-streaming-rpc" tabindex="-1">Call Bidirectional streaming RPC <a class="header-anchor" href="#call-bidirectional-streaming-rpc" aria-hidden="true">#</a></h2><p>Let&#39;s call the required method:</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">GrpcHost</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CreateClient</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">EmployeeService</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">EmployeeServiceClient</span><span style="color:#89DDFF;">&gt;()</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Bidirectional</span></span>
<span class="line"><span style="color:#A6ACCD;">	    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Call</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">x</span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GetByIds</span><span style="color:#89DDFF;">());</span></span>
<span class="line"></span></code></pre></div><p>In the following example, we send two requests with an existing employee ID, get it, send a random ID, and check that the RPC returned a <code>NotFound</code> error:</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">GrpcHost</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CreateClient</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">EmployeeService</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">EmployeeServiceClient</span><span style="color:#89DDFF;">&gt;()</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Bidirectional</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Call</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">x</span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GetByIds</span><span style="color:#89DDFF;">())</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">RequestStream</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Write</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">StringValue</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">Value </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">c8a24c0d-7783-4e24-ae06-8742e4a9a039</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">})</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ResponseStream</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Next</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AssertCurrent</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">resp</span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;">resp</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">FullName</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Should</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Be</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">employee</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">FullName</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">RequestStream</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Write</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Guid</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">NewGuid</span><span style="color:#89DDFF;">())</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ResponseStream</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Next</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AssertStatusCode</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">StatusCode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">NotFound</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div>`,8),o=[e];function t(c,r,D,i,F,y){return n(),a("div",null,o)}const d=s(p,[["render",t]]);export{A as __pageData,d as default};
