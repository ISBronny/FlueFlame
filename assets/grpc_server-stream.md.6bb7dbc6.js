import{_ as s,c as a,o as n,b as l}from"./app.40687699.js";const i=JSON.parse('{"title":"Server streaming RPC","description":"","frontmatter":{},"headers":[{"level":2,"title":"Call Server streaming RPC","slug":"call-server-streaming-rpc","link":"#call-server-streaming-rpc","children":[]},{"level":2,"title":"Handling Errors","slug":"handling-errors","link":"#handling-errors","children":[]}],"relativePath":"grpc/server-stream.md","lastUpdated":1673148208000}'),p={name:"grpc/server-stream.md"},e=l(`<h1 id="server-streaming-rpc" tabindex="-1">Server streaming RPC <a class="header-anchor" href="#server-streaming-rpc" aria-hidden="true">#</a></h1><p>We have a protobuf file with Server streaming RPC <code>GetByAge</code> defined. It returns a stream of employees of a certain age:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">syntax = &quot;proto3&quot;;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">package Examples.Grpc;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">service EmployeeService {</span></span>
<span class="line"><span style="color:#A6ACCD;">  rpc GetByAge(AgeRangeRequest) returns (stream Employee);</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">message Employee {</span></span>
<span class="line"><span style="color:#A6ACCD;">  string guid = 1;</span></span>
<span class="line"><span style="color:#A6ACCD;">  string full_name = 2;</span></span>
<span class="line"><span style="color:#A6ACCD;">  string position = 3;</span></span>
<span class="line"><span style="color:#A6ACCD;">  int32 age = 4;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">message AgeRangeRequest {</span></span>
<span class="line"><span style="color:#A6ACCD;">  int32 from = 1;</span></span>
<span class="line"><span style="color:#A6ACCD;">  int32 to = 2;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="call-server-streaming-rpc" tabindex="-1">Call Server streaming RPC <a class="header-anchor" href="#call-server-streaming-rpc" aria-hidden="true">#</a></h2><p>Let&#39;s get employees aged 35 to 38:</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">GrpcHost</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CreateClient</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">EmployeeService</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">EmployeeServiceClient</span><span style="color:#89DDFF;">&gt;()</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ServerStreaming</span></span>
<span class="line"><span style="color:#A6ACCD;">	    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Call</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">x</span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GetByAge</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">AgeRangeRequest</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> From </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">35</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> To </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">38</span><span style="color:#89DDFF;">}))</span></span>
<span class="line"></span></code></pre></div><p>Then we check that each age of each employee in the stream matches the requested one:</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">GrpcHost</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CreateClient</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">EmployeeService</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">EmployeeServiceClient</span><span style="color:#89DDFF;">&gt;()</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ServerStreaming</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Call</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">x</span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GetByAge</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">AgeRangeRequest</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> From </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">35</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> To </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">38</span><span style="color:#89DDFF;">}))</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ResponseStream</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AssertForEach</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">e</span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Age</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Should</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">BeInRange</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">30</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">38</span><span style="color:#89DDFF;">));</span></span>
<span class="line"></span></code></pre></div><p>The <code>AssertForEach</code> method will call the passed lambda for every response in the stream.</p><p>You can also check each response individually:</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">GrpcHost</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CreateClient</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">EmployeeService</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">EmployeeServiceClient</span><span style="color:#89DDFF;">&gt;()</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ServerStreaming</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Call</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">x</span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GetByAge</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">AgeRangeRequest</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> From </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">35</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> To </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">38</span><span style="color:#89DDFF;">}))</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ResponseStream</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Next</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AssertCurrent</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">employee</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> employee</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Age</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Should</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Be</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">35</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Next</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AssertCurrent</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">employee</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> employee</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Age</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Should</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Be</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">37</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AssertEndOfStream</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span></code></pre></div><h2 id="handling-errors" tabindex="-1">Handling Errors <a class="header-anchor" href="#handling-errors" aria-hidden="true">#</a></h2><p>Let&#39;s try calling the same method with the wrong argument, where <code>From</code> is greater than <code>To</code>. After trying to get the first response, the RPC should return an <code>InvalidArgument</code> error. You can test it like this:</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">GrpcHost</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CreateClient</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">EmployeeService</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">EmployeeServiceClient</span><span style="color:#89DDFF;">&gt;()</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ServerStreaming</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Call</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">x</span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GetByAge</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">AgeRangeRequest</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> From </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">90</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> To </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">}))</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ResponseStream</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Next</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AssertStatusCode</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">StatusCode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">InvalidArgument</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div>`,14),o=[e];function t(r,c,F,D,y,C){return n(),a("div",null,o)}const g=s(p,[["render",t]]);export{i as __pageData,g as default};
